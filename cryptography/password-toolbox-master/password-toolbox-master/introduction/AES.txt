AES是由两位比利时密码学家Joan Daemen和Vincent Rijmen开发的Rijndael分组密码的变体，美国，NIST于2001年11月26日宣布AES为 US FIPS PUB 197。该公告遵循了一个为期五年的标准化过程，其中展示和评估了 15 个竞争设计，在Rijndael 密码被选为最合适的密码作为AES。
AES加密过程是在一个4×4的字节矩阵上运作，这个矩阵又称为state，其初值就是一个明文区块（矩阵中一个元素大小就是明文区块中的一个Byte）。明文的大小固定为128比特，密钥大小为 128、192 或 256 比特。作为一种迭代型密码，AES加密的轮数依赖于密钥长度，128比特-->10轮；192比特-->12轮；256比特-->14轮。
AES每一轮的变换由四个步骤组成，即 SubBytes，ShiftRows，MixColumns,AddRoundKey。最后一轮略微不同。
1. AddRoundKey
给定一个明文 x，将 state 初始化为 x，并进行 AddRondKey 操作，即通过 AES 的密钥编排方案
从种子密钥中派生轮密钥，将 state 的每个字节与子密钥的相应字节进行异或运算。
2. SubBytes
操作 SubBytes 使用一个 S盒对 state 的每个字节都进行一个独立的代换，其中S盒是 {0,1}^8上的置换。有两种方式能够实现这样的代换。
(1)S盒能够被代数定义。S盒涉及有限域中的操作。例如先将state 中的两位十六进制数转换成二进制数再通过 BinaryToField 转换为域元素后再通过 FieldInverse求其乘法逆元后进行仿射变换，再将得到的域元素转换成两位十六进制数即可。
(2) 在计算机中 S盒可以被描述为一个 16 × 16 的矩阵，其中行标号和列标号分别对应 state 每个字节的第一、二个十六进制数字，通过预先准备好的 πs 进行查找表操作进行代换即可。
3. ShiftRows
操作 ShiftRows 循环地对每行中地字节移动一定地偏移量。对于 128 位的 AES，第一行保持不变，第二行地每个字节向左移动一个距离，第三四行分别偏移二和三个距离。这样，ShiftRows 输出的state 的每一列都是由输入状态的每一列的字节组成。
4. MixColumns
操作 MixColumns 对 state 四列中的每一列进行操作。state 中的每一列都被一个新列替代，这个新列由原列乘上域中的元素组成的矩阵而来。
Keyschedule
密钥编排是指从种子密钥中得到轮密钥的过程，它由密钥扩展和轮密钥选取两部分组成。基本原
则如下：
(1) 轮密钥的比特数等于分组长度乘以轮数加 1。
(2) 种子密钥被扩展成扩展密钥。
(3) 轮密钥从扩展密钥中取，其中第一轮轮密钥取扩展密钥的前 Nb 个字，第二轮取接下来的 Nb个字，如此下去。
加解密示例：
Key：    000102030405060708090a0b0c0d0e0f
PLain：00112233445566778899aabbccddeeff
cipher：69C4E0D86A7B0430D8CDB78070B4C55A


