如今大多数的分组密码都是乘积密码，乘积密码通常伴随一系列的置换和代换操作，常见的乘积密码是迭代密码。对于一种典型的迭代密码。我们可以把它看作两部分的组成，即轮函数和密钥编排方案。为了简单说明分组密码体制，我们通过SPN即代换置换网络来进行简单的说明。这也将为学习DES和AES打下基础。SPN有许多变体，常见的一个改动就是不止应用一个S盒，在SPN中每一轮的S盒
设K是一个确定长度的随机二元密钥，通过一个固定的公开的算法用K来生成Nr个轮密钥的，这就是密钥编排方案。轮函数g是以每一轮的密钥和当前的状态作为两个输入，得到的输出作为下一轮的输入。为了能够解密。轮函数在密钥固定的情况下必须是单射函数。
对于SPN，我们可以给出如下对轮函数和密钥编排方案的定义，为了简单，我们同时也给出如下对明文，密钥和密文格式的规定：
（1）设l和m都是正整数，明文和密文都是长为lm的二元向量（lm就是该密码的分组长度），即明文x是一lm比特的二元串，可以将其看作是m个长为l比特的子串连在一起。密钥的长度和密钥编排方案会决定加密所需要的轮数，这里把密钥的长度设置为32比特。
  示例：plain：0010011010110111 key：00111010100101001101011000111111
（2）轮函数：一个SPN包括两种变换，分别记为S（S盒）和P，S:{0，1}^l --> {0,1}^l，即用一个l比特向量来替换另一个l比特的向量; P:{1,...,lm}-->{1,...,lm}，即用lm比特的向量置换另一lm比特的向量。在每一轮的加密中，先用异或操作混入该轮的密钥，再用S进行m次代换，然后再用P进行一次置换。当加密到最后一轮的时候将置换操作替换与成最后一轮密钥的异或然后作为密文输出。
（3）密钥编排方案：从一个32比特的密钥K=(k1,k2,...,k32)，对于5轮的加密，定义第r轮的密钥Kr是由K中从k(4r-3)开始的16个连续的比特组成。这样的密钥编排方案过于简单，不是一种安全的方式，但是对于说明SPN有很好的意义。
加解密示例：
K0 = 0011 1010 1001 0100 1101 0110 0011 1111
K1 = 0011 1010 1001 0100
K2 = 1010 1001 0100 1101
K3 = 1001 0100 1101 0110
K4 = 0100 1101 0110 0011
K5 = 1101 0110 0011 1111

x  = 0010 0110 1011 0111
w0 = 0010 0110 1011 0111
K1 = 0011 1010 1001 0100
u1 = 0001 1100 0010 0011
v1 = 0100 0101 1101 0001
w1 = 0010 1110 0000 0111
K2 = 1010 1001 0100 1101
u2 = 1000 0111 0100 1101
v2 = 0011 1000 0010 0110
w2 = 0100 0001 1011 1000
K3 = 1001 0100 1101 0110
u3 = 1101 0101 0110 1110
v3 = 1001 1111 1011 0000
w3 = 1110 0100 0110 1110
K4 = 0100 1101 0110 0011
u4 = 1010 1001 0000 1101
v4 = 0110 1010 1110 1001
K5 = 1101 0110 0011 1111
y  = 1011 1100 1101 0110
SPN有许多变体，常见的一个改动就是不止应用一个S盒，在SPN中每一轮的S盒都是一样的，但是我们完全可以设计不同的S盒，这个特点可以在DES中找到，DES就在八轮中使用了八个不同的S盒。另一个常见的设计是在每一轮中包含一个可逆的线性变换，该线性变换要么作为置换操作的代替，要么作为其补充，这可以在AES中看到。
